# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        ruby-version: ['2.7', '3.0', '3.1']

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Ruby
      # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
      # change this to (see https://github.com/ruby/setup-ruby#versioning):
        uses: ruby/setup-ruby@v1
      # uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: ${{ matrix.ruby-version }}
          # Use an older bundler that works on Ruby 2.7 / 3.0. This prevents
          # the setup action from failing when Gemfile.lock lists a newer bundler.
          bundler: '2.4.13'

      - name: Ruby >= '3.1' use newer bundler
        if: ${{ matrix.ruby-version >= '3.1' }}
        run: |
          BUNDLED_WITH=$(awk '/BUNDLED WITH/{getline; print $1}' Gemfile.lock || true)
          if [ -n "$BUNDLED_WITH" ]; then
            echo "Installing bundler $BUNDLED_WITH (from Gemfile.lock)"
            gem install bundler -v "$BUNDLED_WITH"
          else
            echo "No BUNDLED WITH found"
          fi
          
      - name: Debug info
        run: |
          echo "=== runner info ==="
          ruby -v
          gem -v
          bundle -v || true
          uname -a
          echo "=== Gemfile.lock Bundled with ==="
          awk '/BUNDLED WITH/{getline; print $1}' Gemfile.lock || true
          
      - name: Ensure linux platform in lockfile (safe no-op if already present)
        run: |
          # add linux platform to the lockfile so the runner installs linux gems when needed
          # this changes the lockfile locally in CI workspace only
          bundle lock --add-platform x86_64-linux || true
  
      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3 --verbose
        
      - name: Run tests
        run: bundle exec rspec
